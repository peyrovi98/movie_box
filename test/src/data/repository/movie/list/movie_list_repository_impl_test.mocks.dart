// Mocks generated by Mockito 5.4.4 from annotations
// in movie_box/test/src/data/repository/movie/list/movie_list_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_box/src/data/datasource/movie/movie_data_provider.dart'
    as _i2;
import 'package:movie_box/src/domain/model/movie/movie_item.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MovieListDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieListDataProvider extends _i1.Mock
    implements _i2.MovieListDataProvider {
  MockMovieListDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> createOrUpdateList(List<_i4.MovieItem>? movieList) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOrUpdateList,
          [movieList],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> createOrUpdate(_i4.MovieItem? movieItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOrUpdate,
          [movieItem],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.MovieItem>> getList(String? search) =>
      (super.noSuchMethod(
        Invocation.method(
          #getList,
          [search],
        ),
        returnValue: _i3.Future<List<_i4.MovieItem>>.value(<_i4.MovieItem>[]),
      ) as _i3.Future<List<_i4.MovieItem>>);

  @override
  _i3.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
